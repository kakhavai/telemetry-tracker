version: "3.8" # Specify compose file version

services:
  # ---- PostgreSQL Database Service ----
  postgres:
    image: postgres:15-alpine # Use official Postgres image
    container_name: telemetry-postgres-compose # Consistent naming
    ports:
      - "5432:5432" # Expose port 5432 on the host
    volumes:
      - postgres-data:/var/lib/postgresql/data # Persist data using a named volume
      - ./schemas/schema.sql:/docker-entrypoint-initdb.d/init.sql:ro

    environment:
      POSTGRES_DB: ${DB_NAME:-telemetry} # Use DB_NAME from .env, default to 'telemetry'
      POSTGRES_USER: ${DB_USER:-postgres} # Use DB_USER from .env, default to 'postgres'
      POSTGRES_PASSWORD: ${DB_PASSWORD?Variable DB_PASSWORD is not set in .env} # Require DB_PASSWORD from .env
    healthcheck:
      test: [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-telemetry}",
        ] # Check if DB is ready
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped # Restart policy

  # ---- Telemetry Tracker App Service ----
  app:
    build:
      context: . # Build from the Dockerfile in the current directory
      dockerfile: Dockerfile
    container_name: telemetry-app-compose
    depends_on:
      postgres:
        condition: service_healthy # Wait for postgres to be healthy before starting app
    ports:
      # Use APP_PORT from .env (defaulting to 8080 if not set), map to container's 8080
      - "${APP_PORT:-8080}:8080"
    env_file:
      - .env # Load environment variables from .env file
    restart: unless-stopped

# ---- Volumes ----
volumes:
  postgres-data: # Define the named volume for data persistence
    driver: local
